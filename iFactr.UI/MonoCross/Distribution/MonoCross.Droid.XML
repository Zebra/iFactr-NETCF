<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoCross.Droid</name>
    </assembly>
    <members>
        <member name="T:MonoCross.Droid.MXActivityView`1">
            <summary>
            Renders an <see cref="T:Android.App.Activity"/>.
            </summary>
            <typeparam name="T">The <see cref="P:MonoCross.Navigation.IMXView.ModelType"/>.</typeparam>
        </member>
        <member name="M:MonoCross.Droid.MXActivityView`1.OnCreate(Android.OS.Bundle)">
            <param name="savedInstanceState">If the activity is being re-initialized after
                 previously being shut down then this Bundle contains the data it most
                 recently supplied in <c><see cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)"/></c>.  <format type="text/html"><b><i>Note: Otherwise it is null.</i></b></format></param>
            <summary>
            Called when the activity is starting.
            </summary>
        </member>
        <member name="P:MonoCross.Droid.MXActivityView`1.Model">
            <summary>
            Gets or sets the model for the view.
            </summary>
        </member>
        <member name="P:MonoCross.Droid.MXActivityView`1.ModelType">
            <summary>
            The type of the model displayed by this view
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXActivityView`1.Render">
            <summary>
            Displays the view according to the state of the model.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXActivityView`1.SetModel(System.Object)">
            <summary>
            Sets the model for the view. An InvalidCastException may be thrown if a model of the wrong type is set.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXActivityView`1.GetModel">
            <summary>
            Get the model for the view.
            </summary>
        </member>
        <member name="T:MonoCross.Droid.MXDroidContainer">
            <summary>
            Represents the MonoCross Android container.
            </summary>
        </member>
        <member name="F:MonoCross.Droid.MXDroidContainer.ViewModels">
            <summary>
            Cache for Models that have been loaded into views.
            </summary>
        </member>
        <member name="P:MonoCross.Droid.MXDroidContainer.NavigationHandler">
            <summary>
            Provides an <see cref="T:System.Action`1"/> to render the view from a loaded controller.
            </summary>
        </member>
        <member name="P:MonoCross.Droid.MXDroidContainer.ApplicationContext">
            <summary>
            Return the context of the single, global Application object of the current process.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXDroidContainer.#ctor(MonoCross.Navigation.MXApplication)">
            <summary>
            Initializes a new instance of the <see cref="T:MonoCross.Droid.MXDroidContainer"/> class.
            </summary>
            <param name="theApp">The <see cref="T:MonoCross.Navigation.MXApplication"/> to manage.</param>
        </member>
        <member name="M:MonoCross.Droid.MXDroidContainer.Initialize(MonoCross.Navigation.MXApplication,Android.Content.Context)">
            <summary>
            Initializes a <see cref="T:MonoCross.Droid.MXDroidContainer"/>.
            </summary>
            <param name="theApp">The <see cref="T:MonoCross.Navigation.MXApplication"/> to manage.</param>
            <param name="applicationContext">The ApplicationContext of the first activity.</param>
        </member>
        <member name="P:MonoCross.Droid.MXDroidContainer.LastContext">
            <summary>
            Gets or sets the last active Context.
            </summary>
            <value>
            The last active <see cref="T:Android.Content.Context"/>.
            </value>
            <remarks>This is useful for figuring out your fromView if you've implemented a <see cref="P:MonoCross.Droid.MXDroidContainer.NavigationHandler"/>.
            However, this isn't a reliable source to get the currently visible activity. </remarks>
        </member>
        <member name="M:MonoCross.Droid.MXDroidContainer.OnControllerLoadFailed(MonoCross.Navigation.IMXController,System.Exception)">
            <summary>
            Occurs when a controller throws an unhandled exception from MXContainer.TryLoadController().
            </summary>
            <param name="controller">The <see cref="T:MonoCross.Navigation.IMXController"/> that failed to load.</param>
            <param name="ex">The <see cref="T:System.Exception"/> that caused the load to fail.</param>
        </member>
        <member name="M:MonoCross.Droid.MXDroidContainer.OnControllerLoadComplete(MonoCross.Navigation.IMXView,MonoCross.Navigation.IMXController,System.String,System.String)">
            <summary>
            Occurs after a successful controller load.
            </summary>
            <param name="fromView">The <see cref="T:MonoCross.Navigation.IMXView"/> that kicked off the navigation.</param>
            <param name="controller">The <see cref="T:MonoCross.Navigation.IMXController"/> that received the navigation.</param>
            <param name="viewPerspective">The <see cref="T:MonoCross.Navigation.ViewPerspective"/> returned by the controller load.</param>
            <param name="navigatedUri">A <see cref="T:System.String"/> that represents the uri used to navigate to the controller.</param>
        </member>
        <member name="M:MonoCross.Droid.MXDroidContainer.Redirect(System.String)">
            <summary>
            Cancels loading of the current controller and navigates to the specified url.
            </summary>
            <param name="url">The url of the controller to navigate to.</param>
        </member>
        <member name="T:MonoCross.Droid.MXFragmentView`1">
            <summary>
            Renders a <see cref="T:Android.App.Fragment"/>.
            </summary>
            <typeparam name="T">The <see cref="P:MonoCross.Navigation.IMXView.ModelType"/>.</typeparam>
        </member>
        <member name="M:MonoCross.Droid.MXFragmentView`1.OnCreate(Android.OS.Bundle)">
            <summary>
            Called to do initial creation of a fragment.
            </summary>
            <param name="savedInstanceState">If the fragment is being re-created from
             a previous saved state, this is the state.
            </param>
        </member>
        <member name="P:MonoCross.Droid.MXFragmentView`1.Model">
            <summary>
            Gets or sets the model for the view.
            </summary>
        </member>
        <member name="P:MonoCross.Droid.MXFragmentView`1.ModelType">
            <summary>
            The type of the model displayed by this view
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXFragmentView`1.Render">
            <summary>
            Displays the view according to the state of the model.
            </summary>
            <remarks>Override <see cref="M:MonoCross.Droid.MXFragmentView`1.OnCreateView(Android.Views.LayoutInflater,Android.Views.ViewGroup,Android.OS.Bundle)"/> in your class for access to an inflater.</remarks>
        </member>
        <member name="M:MonoCross.Droid.MXFragmentView`1.OnCreateView(Android.Views.LayoutInflater,Android.Views.ViewGroup,Android.OS.Bundle)">
            <summary>
            Called to have the fragment instantiate its user interface view.
            </summary>
            <param name="inflater">The LayoutInflater object that can be used to inflate
             any views in the fragment,</param><param name="container">If non-null, this is the parent view that the fragment's
             UI should be attached to.  The fragment should not add the view itself,
             but this can be used to generate the LayoutParams of the view.</param><param name="savedInstanceState">If non-null, this fragment is being re-constructed
             from a previous saved state as given here.</param>
            <returns>
            The created <see cref="T:Android.Views.View"/>.
            </returns>
        </member>
        <member name="M:MonoCross.Droid.MXFragmentView`1.SetModel(System.Object)">
            <summary>
            Sets the model for the view. An InvalidCastException may be thrown if a model of the wrong type is set.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXFragmentView`1.GetModel">
            <summary>
            Get the model for the view.
            </summary>
        </member>
        <member name="T:MonoCross.Droid.MXListActivityView`1">
            <summary>
            Renders an <see cref="T:Android.App.ListActivity"/>.
            </summary>
            <typeparam name="T">The <see cref="P:MonoCross.Navigation.IMXView.ModelType"/>.</typeparam>
        </member>
        <member name="M:MonoCross.Droid.MXListActivityView`1.OnCreate(Android.OS.Bundle)">
            <summary>
            Called when the activity is starting.
            </summary>
            <param name="savedInstanceState">If the activity is being re-initialized after
                 previously being shut down then this Bundle contains the data it most
                 recently supplied in <c><see cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)"/></c>.  <format type="text/html"><b><i>Note: Otherwise it is null.</i></b></format></param>
        </member>
        <member name="P:MonoCross.Droid.MXListActivityView`1.Model">
            <summary>
            Gets or sets the model for the view.
            </summary>
        </member>
        <member name="P:MonoCross.Droid.MXListActivityView`1.ModelType">
            <summary>
            The type of the model displayed by this view
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXListActivityView`1.Render">
            <summary>
            Displays the view according to the state of the model.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXListActivityView`1.SetModel(System.Object)">
            <summary>
            Sets the model for the view. An InvalidCastException may be thrown if a model of the wrong type is set.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXListActivityView`1.GetModel">
            <summary>
            Get the model for the view.
            </summary>
        </member>
        <member name="E:MonoCross.Droid.MXListActivityView`1.ViewModelChanged">
            <summary>
            Event fired from <see cref="M:MonoCross.Droid.MXListActivityView`1.NotifyModelChanged"/>
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXListActivityView`1.OnViewModelChanged(System.Object)">
            <summary>
            Method activated by <see cref="E:MonoCross.Droid.MXListActivityView`1.ViewModelChanged"/>
            </summary>
            <param name="model">The new object returned from a <see cref="E:MonoCross.Droid.MXListActivityView`1.ViewModelChanged"/> event.</param>
            <remarks>This method can be activated when it is overridden by setting <c>ViewModelChanged += OnViewModelChanged</c> and calling <c>NotifyModelChanged()</c> from the <see cref="P:MonoCross.Droid.MXListActivityView`1.Model"/> setter.</remarks>
        </member>
        <member name="T:MonoCross.Droid.MXListFragmentView`1">
            <summary>
            Renders an <see cref="T:Android.App.ListFragment"/>.
            </summary>
            <typeparam name="T">The <see cref="P:MonoCross.Navigation.IMXView.ModelType"/>.</typeparam>
        </member>
        <member name="M:MonoCross.Droid.MXListFragmentView`1.OnCreate(Android.OS.Bundle)">
            <summary>
            Called to do initial creation of a fragment.
            </summary>
            <param name="savedInstanceState">
            If the fragment is being re-created from a previous saved state, this is the state.
            </param>
        </member>
        <member name="M:MonoCross.Droid.MXListFragmentView`1.OnCreateView(Android.Views.LayoutInflater,Android.Views.ViewGroup,Android.OS.Bundle)">
            <summary>
            Called to have the fragment instantiate its user interface view.
            </summary>
            <param name="inflater">The LayoutInflater object that can be used to inflate any views in the fragment.</param>
            <param name="container">If non-null, this is the parent view that the fragment's UI should be attached to.  The fragment should not add the view itself,
             but this can be used to generate the LayoutParams of the view.</param>
            <param name="savedInstanceState">If non-null, this fragment is being re-constructed from a previous saved state as given here.</param>
            <returns>
            The created <see cref="T:Android.Views.View"/>.
            </returns>
        </member>
        <member name="P:MonoCross.Droid.MXListFragmentView`1.Model">
            <summary>
            Gets or sets the model for the view.
            </summary>
        </member>
        <member name="P:MonoCross.Droid.MXListFragmentView`1.ModelType">
            <summary>
            The type of the model displayed by this view
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXListFragmentView`1.Render">
            <summary>
            Displays the view according to the state of the model.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXListFragmentView`1.SetModel(System.Object)">
            <summary>
            Sets the model for the view. An InvalidCastException may be thrown if a model of the wrong type is set.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXListFragmentView`1.GetModel">
            <summary>
            Get the model for the view.
            </summary>
        </member>
        <member name="E:MonoCross.Droid.MXListFragmentView`1.ViewModelChanged">
            <summary>
            Event fired from <see cref="M:MonoCross.Droid.MXListFragmentView`1.NotifyModelChanged"/>
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXListFragmentView`1.OnViewModelChanged(System.Object)">
            <summary>
            Method activated by <see cref="E:MonoCross.Droid.MXListFragmentView`1.ViewModelChanged"/>
            </summary>
            <param name="model">The new object returned from a <see cref="E:MonoCross.Droid.MXListFragmentView`1.ViewModelChanged"/> event.</param>
        </member>
        <member name="T:MonoCross.Droid.MXTabActivityView`1">
            <summary>
            Renders tabs for an application.
            </summary>
            <typeparam name="T">The <see cref="P:MonoCross.Navigation.IMXView.ModelType"/>.</typeparam>
        </member>
        <member name="M:MonoCross.Droid.MXTabActivityView`1.OnCreate(Android.OS.Bundle)">
            <summary>
            Called when the activity is starting.
            </summary>
            <param name="savedInstanceState">If the activity is being re-initialized after previously being shut down then this Bundle contains the data it most
              recently supplied in <c><see cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)"/></c>.  <format type="text/html"><b><i>Note: Otherwise it is null.</i></b></format></param>
        </member>
        <member name="P:MonoCross.Droid.MXTabActivityView`1.Model">
            <summary>
            Gets or sets the model for the view.
            </summary>
        </member>
        <member name="P:MonoCross.Droid.MXTabActivityView`1.ModelType">
            <summary>
            The type of the model displayed by this view
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXTabActivityView`1.Render">
            <summary>
            Performs a layout according to the state of the <see cref="P:MonoCross.Droid.MXTabActivityView`1.Model"/>.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXTabActivityView`1.SetModel(System.Object)">
            <summary>
            Sets the model for the view. An InvalidCastException may be thrown if a model of the wrong type is set.
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXTabActivityView`1.GetModel">
            <summary>
            Get the model for the view.
            </summary>
        </member>
        <member name="E:MonoCross.Droid.MXTabActivityView`1.ViewModelChanged">
            <summary>
            Event fired from <see cref="M:MonoCross.Droid.MXTabActivityView`1.NotifyModelChanged"/>
            </summary>
        </member>
        <member name="M:MonoCross.Droid.MXTabActivityView`1.OnViewModelChanged(System.Object)">
            <summary>
            Method activated by <see cref="E:MonoCross.Droid.MXTabActivityView`1.ViewModelChanged"/>
            </summary>
            <param name="model">The new object returned from a <see cref="E:MonoCross.Droid.MXTabActivityView`1.ViewModelChanged"/> event.</param>
        </member>
    </members>
</doc>
